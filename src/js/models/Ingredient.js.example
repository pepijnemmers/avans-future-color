export class Ingredient {
    constructor(name, mixTime, mixSpeed, color, structure) {
        this.name = name;
        this.mixTime = mixTime;  // Tijd nodig om te mengen (in sec)
        this.mixSpeed = mixSpeed; // Snelheid van mengen
        this.color = color;  // Kleur in HEX, RGB of HSL
        this.structure = structure; // Structuurtype (bijv. vloeibaar, korrelig)
    }

    // Methode om het ingrediënt op het scherm te tonen
    display() {
        const ingredientDiv = document.createElement("div");
        ingredientDiv.classList.add("ingredient");
        ingredientDiv.style.backgroundColor = this.color;
        ingredientDiv.innerText = this.name;

        document.getElementById("ingredient-container").appendChild(ingredientDiv);
    }

    // Simulatie van het mengen met andere ingrediënten
    mixWith(otherIngredient) {
        if (this.mixSpeed !== otherIngredient.mixSpeed) {
            console.warn("Mixsnelheden verschillen! Dit kan problemen geven.");
        }
        return new Ingredient(
            `Gemengd ${this.name} & ${otherIngredient.name}`,
            Math.max(this.mixTime, otherIngredient.mixTime),
            this.mixSpeed,
            this.blendColors(otherIngredient.color),
            "Gemengd"
        );
    }

    // Helperfunctie om kleuren te mengen (simpele hex-mix)
    blendColors(otherColor) {
        // Simpele mix: gemiddelde van de kleuren (bijv. hex)
        return "#888888"; // Placeholder voor een echte kleurmenging
    }

    // Opslaan in LocalStorage
    saveToLocalStorage() {
        let storedIngredients = JSON.parse(localStorage.getItem("ingredients")) || [];
        storedIngredients.push(this);
        localStorage.setItem("ingredients", JSON.stringify(storedIngredients));
    }

    // Laden vanuit LocalStorage
    static loadFromLocalStorage() {
        let storedIngredients = JSON.parse(localStorage.getItem("ingredients")) || [];
        return storedIngredients.map(i => new Ingredient(i.name, i.mixTime, i.mixSpeed, i.color, i.structure));
    }
}
